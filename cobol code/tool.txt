				Mainframe Interview - Tool Session
			------------------------------------------------------
--
INTERVIEW -TOOL SESSION-05:-
-------------------------------------------------------------------------------------------------
SERVICE NOW TOOL (TICKET TOOL):- (SUPPORT & MAINTENACE)
----------------------------------
	|
	TICKET TOOL	-> ALL OUR WORK - TRACKED -USING THE TICKET
	|
	3 TYPES	1. INCIDENT  ->  PROCESS BREAK  -> JOB ABEND / TRANS -ABEND	--> SLA
		2. SERVIEC REQUEST/TAST -> ANSLYSIS REQUEST			--> SLA --> WEEK'S (NOT CLOSE - REASON)
		3. CHANGE REQUEST (CR'S)  -> CHANGE TO UR CODE			-> NO SLA

INCIDENT/SER REQUEST: 	STATUS:	   START 	->  OPEN
				ASSIGN  	->  IN-PROGRESS
				REQUIRED INPUT  ->  PENDING/HOLD		(WAITING FOR CONFIRMATION)
				RESOLVED	->  RESOLVED		(NOTES - RESOLTION DETAILS)
				CLOSE		-> 2 WAYS -> CUSTOMER CLOSE IT
							  -> AUTO-CLOSE 7 DAYS
	-> IN CASE -> CUSTOMER - REOPEN'S -> ISSUE**

CHANGE REQUEST:-
		START ->  STATUS -> NEW
				 -> IN-PROGESS	-->  CODING /TEST/ REVIEW / 
				 -> APPROVAL  -> APPORAL -> APPROVED  (EMAIL APPROVAL - ATTACH)
				--> IMPLEMENTATION
				 -> REVIEW   -> POST PRODUCTION VALIDATION(SCRRENSHOT JOB , REPORT - EMAIL CONDFIRMATION)<ATTACH
				 -> CLOSE
				
--> DEVELOPMENT/ENCHANMENT:-	-> BIG DEVELOPEMENT -> OTHER TOOL -> JIRA TOOL

	WORKING-TRACKING TOOL -> DEVELOPMENT:
		|
		WORKING MODEL -> DEVELOPER -> 2 WORK MODEL	-> 1.WATERFALL   2. AGILE

	-> CHANGE REQUEST(CR) -> WATERFALL->  REQUIRED - DESIGN - CHANGE - TEST - REVIEW - IMPLENETATION
	---
	-> AGILE ->FAST FARWARD MODEL:-
		
		SPRINT -> DURATION (2 WEEKS) -IN A MONTH 2 SPINT
		  |
	 TASK -> USER STORY	-> LEVEL POINT -> 1 -- 5 (1-20HR  - 5-100HR)

	--> BEFORE THE SPINT START >  1. SPRINT PLANNING MEETING  (U - TEAM - S-MASTER - MANAGER - CLIENT)
						2 WEEK > EVERY RESOUECE -> WORK - 80 HR PLANNED.  (1 WEEK 40HR)
						-> OLD USER STORY -> CODING LAST SPINT -> TESTING -40HR
						-> NEW STORY  -> TASK-1 -> ANLSYSIS > 20 HR
						-> REVIEW ->  TASK-2 -> 10HR

					2. DAILY  =-> 10/15  -STANDUP/STATUS MEETING		1. UPDATE  2. ROAD BLOCK
					3. STATUS -> ENF OF SPRINT

		-SPRINT PLANNING TOOL --> HOURS  ->  PLANNED HOURS - ACTUAL
							80		40 

====================================
FILE TOOL:- 
	EASY TOOL:	1. FILE-MANAGER   2. FILE-AID  3. FILE-MASTER

	-> WHY /WHEN I NEED TO USE A FILE TOOl

		1. SEE -COMP/COMP-3 (ANALSYS)	-> FILE *  - COPYBOOK  --> TOOL
		2. EDIT ANY BIG FILE *(3.4 - NOT USABLE)
		3. SEE THE LAYOUT - COPYBOOK			-> USEFUL -FLD POSTION -> 2 PLACE 	1. SORT JCL  2. DB2 LOAD
		4. FIND A VALUE (F COMMAND 3.4)


----
DB2 TOOL		2 KINDS		1. QUERY PLATFORM  -> SPUFI /QMF	=> TYPE UR QUERY & EXECUTE
					2. BROWSE TOOL ->  MASTER-MIND, FILE-AID FOR DB2 , RC QUERY***  -> OPEN THE TABLE, COL , DATA -> NO QUERY
===============================
INTERVIEW -TOOL SESSION-05:-
------------------------------------------------------------------------------------------------------------
AM IN PRODUCTION ENV NOW -> AS A SUPT ROLE:-
-----------------------------------------
ABEND TOOL  ->   1. ABEND-AID TOOL   (2. FAULT ANALYSIS  3. SYSDUMP)
			|
			TO SHOW THE LOG BETTER -. THEY ALWAYS NEED - PGM'S  COMPILE LISTING
			|
			COMPILE LISTING -> WIL BE ADDED TO TOOL - AT THE TIME OF -IMPLEMENTATION
		-> IN INTERVIEW -> 
				Q1: OLD PGM - WHICH DO NOT HAVE THE LISTING - HOW TO GET IT.
					-> ANS:  DEV/TEST -> VERSION CONTROL TOOL  -> GEENRATE THE LISTING OF ANY PGM -> OUTPUT -> PS FILE**
						 TRANSFER PS FILE(LIST) -> PROD -> CONNECT IT TO ABEND-AID.

		2.  JOB - PGM P1 -> ABENDS  -> 2 TYPE	1. SYSTEM ABEND 	-> Sxxx		-S0C4 = S0C7 -- NO DISPLAY (DATABASE ABEND)
							2. user/DEV ABEND	-> U3200	-> DISPLAY 'PARA' 'RECORD' 'REASON'  + ABEND

			ABEND-AID TOOL ->  S0C7 -> TELL WHAT PGM - PARA - STATEMENT - VARIBALE -> DATA

	REASON TO USE - TOOL;  > RESOLVE THE ABEND - SLA**  => SERVICE LEVEL AGREEMENT
	
	ABEND ->  TICKET(INCIDENT) -> 	PRTY	-REASON	-    RESPOSE-TIME 	-RESOLVE TIME
					 P1	 URGENT		<15MIN		 2-4HR 
					P2	HIGH		<15MIN		 4-8HR  <SAME DAY
					P3	MEDIUM		<30MIN-1HR	 1 WEEK
					P4	LOW		<30MIN-1HR	 2-4 WEEK

	JOB ABEND -> P1,P2 (P3 - CONSIDER - P2)
======================================================================================


















INTERVIEW -TOOL SESSION 04:-
--------------------------------------------------------------------------------
RESUME -> PROJECT  - APPLICATION ->  EXAMPLE: -KNOW THE DATA FLD(BUSINESS ;CUSTOMER)  (INSTEAD OF EMP OR STUDNET)
			| - SALES	-> PAPER -> INVOICE  - FLD**
			| - POLICY	-> APPLICATION FORM -- FLD**


TOOL:-

AS A DEVELOPER: 	CODE + COMPILE + TEST => DEBUG TOOL
			==============
			     |
			 VERSION CONTROL TOOL



AS A SUPPORT:		1. SCHEULER TOOL	1. SCHDULE NEW JOB + CHANGE TO EXISTING SCHDULE  
						2. MOINTOR THE BATCH CYCLE
						3. RERUN THE JOB - IN CASE ABEND

			2. ABEND TOOL		1. USED -CLUES OF AN ABEND  	1. PARANAME  2. STATEMENT 3. DATA IS CAUSING THE PROBLEM

	** SCHEULER TOOL & ABEND TOOL  -> DONT HAVE COMMAND -> NAVIGATION OPTION.

			HI COB << COMMAND
			3.2  << NAVIGATION OPTION

 ==> SCHDULER: 	OPC - CA-7/CA-11 - ESP  - AJS - CTRL-M , TWS .. MANY OTHER
	|				   |
	|				AUTOMATED JOB SCHDULER.
	JOB -> 1. FREUENTY => DAILY, MONTHLY, YEARLY
		   TIME -> 6 , 5

		2. DEPENDECY 	->    JOB J1 -->  JOB J2 --> JOB J3
					PREDECCOR    HERE  -> SUCCESSOR

  -> ADDING A NEW S OR CHANGE AN EXSITING SCH::  	1. TEST/DEVL ENVIRONMNET	(IN THE TOOL)
							2. REVEIWED BY LEAD/SME
							3. IMPLEMENT/MIRGRATE THE CHANGE TEST -TO- PROD
							4. CHANGE WILL BE IN EFFECT - NEXT CYCLE

		-> JOB J1 -> EXISRTING => RUNNIN DAILY 5AM
			CHANGE TO SCHDULER/JOB-> MOVE CODE/SCH -> 4AM  -> IT WONT TAKE CHANGES NOW
								  	> WILL BE EXECUTE IN NEXT CYCLE 5AM
						
	-> FSA (FINICAL APPLICATION) - AUDIT'S --> PROCESS WITH LOT OF DOCUMENTATION
							|
						WE DONT HAVE ACCES TO DO ANY IMPLEMENTATION
								PACKAGE
								SCHEULER
								JOB		
		** RASIE A TICKET -> OPERATION (CHANGE IMPLEMNTATION)
				|
			DETAILS : TSO PACKAGE - COMPONENET - PROD ENVIROMNET
			   	:  JOB -> PDS - FREEZE
				: SCHULER -> ENV-PROD - PROCESS ID - SCHDULER DETAILS

==> SCHEULER new (change)

	J.A.2 -> CHECKOUT -> BRING SCHDULER PROD - TEST
	J.A.3 -> MAINTENACE -> CHANGE -> ADD A SCHDULER /REVMOE / DEPENDECY(PRED) / JOB INFORMATION
	J.A.5 ->MIGRATE -> MOVE T -PROD  (EFFECT WILL BE NEXT DAY)

	--> ONLINE SCREEN ->  F1,F2,F3-UPDATE..	F4 - NO FUCNCTIONLY
			MY VIEW==>	CHANGE  > F4  -> ERROR MESSAGE - INVALID KEY PRESSED & DO NOT UPDATE THE DATA
			SME		CHANGE	> F4  -> ERROR MESSAGE - INVALID KEY PROESSED & -CHANGE TO UPDATED AS WELL.
			|
			BUSINESS USER -> SME VIEW 


-==> FILE AID OR RC (DB2)















Interview -Tool Session :03:-
----------------------------------------------
VERSION CONTROL TOOL & DEBUG TOOL:
--------------------
	1. VERSION CONTROL TOLL  -> NEW PROGRAM ->  'CR' - NEWPGMNAME -> ENTER -> NEW PGM CODE UR -F3 + ENTER COMPILATION
								|
								TYPE
				
	2. DEBUG TOOL 	-> 
				1. PREPARE THE PGM -> 1. COMPILE THE PGM =XPED - DDIO FILE && 2. DEPLOY THE PGM TO TEST
				2. PREPARE THE TEST JOB & TEST DATA --> 1. COPY FROM PROD   OR EXISTING APPLICATION DATA
						|
						1. COPY PASTE  OR TYPE THE NEW JOB
				3. DEBUG TOOL
					1 TIME SETUP  1. CREATE THE DEBUG PROFILE (TAKE HELP OF THE TEAM MEMBER)
						      2. SELECT A PROFILE (BATCH - ONLINE)
						      3. OPTION 2- TSO  -> BATCH PROFILE  <<  1. PGM NAME  2. JCL JOBLIB  3. SELECT DD NAME - 4 DEBUG
									-> ONLINE PROGILE <<  1. PGM NAME -TRANS-ID - WAIT STATE
												2. ONLINE SCREEN - TRIGGER IT - CATCH -TRIGGER -DEBUG

					2. DEBUG MODE	1. F9 & F12 (SET THE BREAK - B/A)
							2. KEEP (K) VARIBALENAME
							3. SOURCE SUBPROGRAM

=========================================================
INTerview -Tool Session :03:-
-------------------------------------------------------------------------------------------
VERSION CONTROL TOOL:-
	|
	4 STEPS		1. CHECKOUT	2. STAGE   	3. DEPLOY   4. IMPLEMENTATION.
			     |		   |		    |			|
			 G-GENERATE	F3 & ENTER	  DT-ENV		TSO PACKAGE
					   |
					  G-GENERATE

==> 
TODAY -> STARTED TO WORK ON X-PGM  -> CHECKOUT  -> WORKING 10 DAYS
-
3 DAYS -> QUICK CHANGE SOME X-PGM -> CHECKOUT -PROD -> CHNAGE - MOVE THE CODE TO PROD

-NEXT DAY -> CHECK OUT LATEST > COPY MY CHANGE NEW CODE -> TESTING..
==================================================================================================================================
DEBUG TOOL:-  DEV/TEST ENVIRONMENT :
--------------------------------------------------

	1. ANALYSIS  - TO FIND ANY ISSUE/FOR LOGIC UNDERSTAND
	2. TESTING 
------------------------
IF WANT TO DEBUG OF MY COBOL PGM:-

	1. PREPARE THE PGM
		1. VERSION CONTROL TOOL
			1. CHECKOUT   2. STAGE/CHANGE  3. COMPILE -> GENERATE - DDIO FILES  (XPED=Y)  4. DEPLOY THE CHANGE TEST ENV.

	2. PREPARE THE TEST DATA * TEST JOB

		TEST JOB -> COPY PASTE FROM PROD - TO TEST -> FILE -PERSONAL FILE
		TEST DATA
			2 CASE	1. FILE AS INPUT	-> 1. PROD ENV - PROD FILE
							-> 2. DATA TRASNFER - PROD -- TEST TSO < UR PERSONAL FILE

				2. TABLE AS INPUT	->  1. BACKUP IN TEST TABLE
								--
							    1. UNLOAD IN PROD -PERSONAL FILE
							    2. PERSONAL FILE - TRANSFER - TSO-TEST
							    3. LOAD THE DATA TO TEST TABLE

	3. DEBUG OF THE PGM
		1. XPEDITOR TOOL  (INTERTEST - IBM DEBUGGER)
			|
			1ST TIME  --> SETUP A PROFILE		1. LOAD LIB NAME   2. COPYBOOK  3. DB2 ENVIROMENT 4. DDIO FILES
					|
					MULTIIPLE PROFILE	1. ONLY COBOL + FILE
								2. COBOL + DB2
								3. COBOL + CICS + DB2
								4. COBOL + IMS..

		2. SELECT THE PROFILE AS U NEED  (BATCH PROFILE  -- ONLINE PROFILE)

			XP -> OPTION  2 TSO 1. -> BATCH PROFILE	 ->>>  PROGRAM NAME: _MAINPGM_________
									JCL JOB LIB: IBMUSER.TX.JOBLIB(TESTJOB1)
									DB2 : Y/N  - SSID: DB9G  : PLAN: ______

					    2.  JCL JOB SCREEN -> SELECT DD NAME**  (S)  --> END** COMMAND TO START THE DEBUG
	
					    3.  -COPY OF THE SELECT DD LIB  0> IBMUSER.TX.JOBLIB(XPTESTJ1)
					
					    4. ENTER ABOVE SCREEN -> ENTER INTO DEBUG MODE.

			ONLINE PROGRAM

			XP -> OPTION  2 TSO  1. ONLINE PROFILE	->  PROGRAM NAME: ____________
									TRANS-ID: ______

					ENTER -> IT WILL BE WAIT STATE

					     2. ONLINE SCREEN ->INPUT -> TRIGGGER THE PROCESS  -> 

					     3. WE CAN SEE DEBUG MODE.

=====>  ONCE UR ON DEBUG SCREEN:

  MONTOR SCREEN:							-COMMADN -> KEEP(K) VARIABLE-NAME
		VARIABLE NAME 		- VALUE

  BODY OF THE PGM:

	====>	MOVE  A TO B	(1ST COBOL STATEMENT)
		MOVE  C TO D
		MOVE

	--TO EXECUTE THE STATEMENT -> 2 WAYS	1. F9 (GO 1)  --EXECUTE/DEBUG THE PGM LINE BY LINE
						--
						2. BREAK-POINT + F12 (GO)
							|
							B -- STOP THE CONTROL -BEFORE EXECUTE THE STATMENT
							A -- STOP THE CONTROL -AFTER EXECUTE THE STATEMENT

							--> IF WE DONT SET ANY BREAK POINT -> F12 -> SYSTEM EXECUTE ALL LINE -STOP 'GOBACK'

		MOVE ...
		PERFORM INITIAL-PARA
		PERFORM INPUT-PARA
	 ==>  B	PERFORM PROCESS-PARA

	--> HOW TO DEBUG THE SUBPGM**		1. WHEN UR IN MAINPGM -DEBUG
						2. "SOURCE SUBPGMNAME"		-> CONTROL SUBPGM ->  SET A BREAK POINT B -MOVE
						3. F9 -IN MAINPGM  --> CALL 'SUBPGM01' -> CONTROL SHOW U THE SUBPGM -> STOP - BREAK POINT**
						4. F9- SUBPGM  ---> GOBACK -> CONTROL WILL BACK TO MAINPGM


	==> HOW TO COME OUT THE DEBUG  	->  "EXIT" COMMAND

===================================================================

INTERVIEW Session 02:-
---------------------------------------------------
PROJECT ROUND:		1. LAST WORK/TASK U COMPLETED	 -> EXAMPLE (COUPLE EXAMPLE)			1. ANALYSIS  2. TESTING
							-> HANDOVER UR TASK - KT OF UR KNOWLEDGE TEAM

			2. CHANLLAGE TASK - 1/2 EXAMPLE

--> MAIN - SUPT WORK ->  DAY-TO-DAY

	1. ANALYSIS OF USER REQUREST
	2. ABEND RESOLIUTION
	3. CODE FIX/CODE CHANGE   --> BSUINESS RULES CHANGE (ADD/REMOVE)
		|
	   ABEND - REASON - FIX IT
	4. TESTING => DOCMENTATION
	5. IMPEMEATION  
	6. MEETING		--> MS TEAM'S

===> 							===> TOOL -> VERSION CONTROL TOOL**
ASSUME THAT - I WANT TO  1. NEW PGM 2. CODE CHANGE

	MAINFRAME ->  Z/OS  ->   TSO-PROD		-> COBOL ->  LOAD MODULE ONLY (nO SRC CODE)

				 TSO-TEST/DEVL		-> COBOL ->  SRC CODE & LOAD MODULE		<< VERSION CONTROL TOOL , DEBUG TOOL

 => VERSION CONTROL TOOL *ENVDEOR  (CHANGEMAN - PANVALT - SCLM..)

	-> ENDVEOR  TOOL ->  1. CODE CHANGE
		|
		PROD ENV	--> CURRENT PROD CODE + TYPE	(WE CANNOT EDIT , DELETE , NO CHANGES)
		|				EX  COBOL P1 - CBL ||  COBOL+DB2 - CBD  || COPYBOOK - CPY
		DEVL ENV	--> COPY OF THE CODE -> EDIT - CHANGES
		

			STEP1: CHECKOUT  -- COPY THE PROD PGM --> DEVL ENV
				|
				OPTION -G -GENERATE	1. COPY THE PROD COPY CODE - DEVE CODE
								ENV: ABC		ENV -> ABC-D1, ABC-D2,ABC-D3
								  P1,P2,P3   --> G -P1  -->      P1
								  P1,P2,P3   --> G -P1  -->               P1

			STEP2: STAGE(CHANGES)
					1. MAKE THE CHACGE THE CODE + COMPILATION
					2. NO CHANGE -- COMPILATION

				** MAKE THE CHANGE ->   1. DEVE-D1 -->  E -EDIT - UR PGM -ONCE THE CHANGES ARE COMPLETED
									  	-> F3 + ENTER
										-> TOOL - WILL SUBMIT THE COMPILATION JOB**
								COBOL PGM -> COMPILATION -> LOAD IN TEST LIB
								COBOL+DB2 PGM ->  PRE-COMPILATION ->  LOAD & DBRM  ((BIND WILL NOT HAPPEN)
								COBOL+CICS   ->   TRANSLATION ->  LOAD

				** MAKE NO CHANGE -> JUST WANT TO COMPILE
							1. DEVL-D1 ->   G - GENERATE - COMPILE THE PGM

			STEP3:- TEST** DEPLOY THE CHANGE TO TEST**

				PROD-ENV(ABC) ---G--- DEVL-ENV(ABC-D1) -- DEPLOY TO TEST ->  1. UNIT TEST (ABC-T1)
										|	     2. SYSTEM TEST (ABC-T2)
										|	     3. QUALITY TEST (ABC-T3)/PRE-PROD TEST ENV
										|
									OPTION DT (DEPLOY TEST) -> SCREEN SELECT TEST ENVIRONMENT
				** HERE ONLY -COBOL-DB2 -> BIND PROCESS.	
				***DEBUG*

			STEP4:-IMPLEMENTATION /MOVE THE CODE TO PRODCTION:

				1. CREATE THE PACKAGE WITH ALL THOSE REQUIRED COMPOENET
					-> TSO PACKAGE	-> STATUS -"CAST"				-TILL THIS IS ONLY UR WORK
				2. SME/TECH -> APPROVE THE PACKAGE (ENV TOOL - SME APPROVE)
				3. BATCH JOB > EVERY 15 MIN ->PICKUP -> APPROVED PACKAGE
					1. MOVE THE CODE TO PRODUCTION:
						1. ONLY COBOL PGM -->  LOAD -> MOVE ONLY THE LOAD -> PROD ENV.
						2. COBOL+DB2 PGM  ->  LOAD & DBRM - MOVE TO PROD &&& BIND PROCESS IN PROD -PACKAGE/PLAN**

					2. UPDATE THE CURRENT CODE

						PROD-ABC ->  PGM P1> V1.1
						DEVL-ABC-D1> PGM P1> V1.2

						IMPLEMEATION ->  DEVL-ABC-D1 ==> COPIED TO PROD-ABC
												PGM P1 - V1.1
												PGM P1 - V1.2
						-> DELETE THE PGM FROM DEVL-ABC-D1.

VERSION CONTROL TOOL (ENVEDOR):
		1. COBOL PGM
		2. COPYBOOK
		3. MAPSET
		4. DBD PSB 
		5. CONTROL CARD (SOME TIMES)

	** JCL JOB -> NO
	** DATA (TEST/PROD) -> NO

	4 STEPS:	1. CHECKOUT	-> OPTION -> G	-(COPY PROD -- DEVEL)
			2. STAGE  -> CODE CHANGE - COMPILATION	-->  	WITH CHANGES -> F3 + ENTER -> COMPILATION SUBMIT
								-->   WITHOUT CHANGE ->  G  -> COMPILATION SUBMIT
			3. DEPLOY TO TEST  -> OPITON - DT  (SELECT THE TEST ENVIRONMENT)
			4. IMPELEMATION ->  1. TSO PACKAGE  --> APPROVED - IMPLEMENTATED.

========================================================
INTERVIEW Session 01:-
-----------------------------------------------------------------------------

AM GOING IS INTERVIEW:-

		1. RESUME	--> READY  -> NEW MAINFRAME >  1YEAR - 3 YEAR -->  1 PROJECT -- 2 APPLICATION
						--> ROLES -RESP  -> 1. DEVELOPER  2. MAINTENACE & SUPPORT  <<<< USE THIS TYPE APPLICATION
							|				1. SUPPORT ACTITIES
							|				2. CODE CHANGES - COBOL PGM
							YOUTUBE CHANNEL -> RESP **
							| 
							YOUTUBE CHANNEL -> PREPARE THE RESUME

			-> MAKE SURE -> U KNOW - PROJECT - APPLICATION - BUSINESS RULES - DATA FLOW --> ROLE & RESP

		2. JOB PORTOAL -->   1. REMOVE AND UPLOAD -> EVERY WEEK  (CHANGE THE NAME STYLE -> SURNAME , FULL NAME,  MIDDLE)
					2. SEARCH BY SKILL --> MAINFRAME - COBOL - JCL - DB2 - CICS - IMS-DB - TOOL NAMES

				HR -TODAY SEARCH >  1ST PAGE ->  ANIL -3.4+ YEARS  -> CALLED -> HAD INTERVIEW
					2ND DAY		-> 	ANIL -3+YEAR - LAST UPDATED 1 WEEK DAYS OLD
			

		3. INTERVIEW -HR -SCHEULE CALL:-
					-> NAME -> EXP -> CURRENT CTC  - EXPECTED CTC
					-> NOTICE PERIOD  -> 90 DAYS -> DONT CALL U BACK
							  0> < 30DAY -> IMMEDIATE**	-WHY -> 1. CURRENTLY ON BENCH -WAITING FOR NEXT PROJECT
								|				2. IF I RESIGN - THEY WILL RELEASE U IN 1 WEEK
							ALREADY IN NOTICE 45 DAYS

			==> 90 DAYS:-	1. DECIDE U WANT TO GO OUT OF THE COMPANY  -YES
					2. RELASE OUT OF THE PROJECT   
					3. PUT UR PAPER -> 90 DAYS NOTICE   --> 1. RETAIN - OFFER HIGHER SALARY
					4. NEXT 45 DAYS -> RELAX - PREPARE FOR INTERVIEW
					5. 50TH DAYS -> NO CALL , NO INTERVIEW SELECTED --> 1. GOBACK TO OLD COMPANY 
											    2. EXIT - LOOK FOR THE JOB

		4. INTERVIEW -> ROUND-1:-  (U TAKE UR OWN INTERVIEW  -> PROXY PERSON 	1. VIDEO -> LIP'S WIL NOT SYNC
											2. TAKE A IMAGE UR FACE - PROFILE -> NEXT ROUND/JOIN -LOOSE
			1. UR OWN INTERVIEW:
				1. SELF INTRODUCTION + CAREER  	-> 1. PREPARE -> INITIAL - 4 LINES
						|		   2. PROJECT (1-2 LINE) - APPLICATION (BUSINESS POINTS) - ROLES
						LESS THAN TO 2 MIN
						|
						PROF SUMMARY + CURRENT COMPANRY EXP + CURRENT PROJECT APPLICATION + ROLES + LOOKING FOR A JOB CHANGE


			2. PROJECT ROUND:-	1. BASED ON THE WORK - U HANDLED IN THIS EXP

			3. TECHNICAL ROUND -> COBOL - JCL - DB2 - CICS - IMS....

==> DAY-DAY WORK OF A SUP-MAINTENACE:-  <===

	-> I LOGIN TO SYSTEM  -> 	1. CHECK THE EMAIL	1. 2 EMAIL BOX   1. COMPANRY MAIL BOX << BIRTH , NEW JOINER , TRAINING
										 2. CLEINT/PROJECT MAIL BOX (MS OUTLOOK) - WORK RELATED

						1. UPDATE OF THE STORY -DURING NON-OFFICE HOURS
						2. NEW WORK -
						3. TEAM MEMBER WORK	(AM SENDING ANY MAIL - CC - WHOLE TEAM)
						3. REPLY FOR UR EMAIL (CUSTOMER - SME - TEAM LEAD)

					2. BASED ON THE MAIL -> PLAN THE DAY

						1. NEW WORK - URGENT
						2. OLD WORK - CONTINUE 
		-> SUPPORT & MAINTENACE:
					1. ANALYSIS  		1. USER REQUEST 	1. DATA ISSUE  (OUTPUT FILE/TABLE ->WRONG VALUE)
											2. LOGIC OF THE EXIST PGM (NEW BUSINESS USER)
	
								2. TECHNICAL		1. FREQUENT ABEND -> FIX ON CODE
											2. LOGICAL /BUSINESS CHANGE
											3. IMPACT ANALYSIS -> CHANGE IN PGM, COPYBOOK

								3. POST MATER ->  APPL=A => APPL=B ==> APPL-C
												|
												UR HERE

								4. MIGRATION + REMOVAL OF EXISTING PROCESS

					2. CODE CHANGES + TESTING + REVIEW MEETING + RESULT + CLIENT PRENTATION

					3. DOCUMENTATION  	1. ANALYSIS
								2. IMPACT ANALYSIS (COPYBOOK, SUBPGM)
								3. TEST CASE - TEST RESULT
								4. PROD MOVE -CHANGE REQUEST DOCUEMNT (DES - TEST - SOX - CHANGE)
					4. MEETINGS
							1. STATUS MEETING - ASK UR SME WITH UR QUESTION
									  - UPDATE UR TASK	(WEEKLY)
							2. REQ - DISCUSSION
							3. TEST RESULT -PRESENTATION  =>SME && CUSTOMER/USER
							4. OTHER MEETING
==> PREPARE THE NOTES:
	--> QUESTION:
=====================================
CURRENT PROJECT:
	--> FEB 1ST -> NOW => NOTHING  *KT		- RELAX
	==> BEFORE
		-> IMS PROJECT ->  10 DB WERE USED FOR 20 YEAR MORE
				    |
				  1 DB IS NO LOGNER REQUEST > SYSTEM THAT WANT USE
				    |
				  REMOVE ALL THE CONNECTION THAT IS HAVING (SME)

		MAINFRAME -> DB
	EXTERNAL -> DATA ->  CROSS REF -DB	-> IMPACTING - FEW SYSTEM PGM
			|		|			|
		  NEW PGM-4/PGM		|		 MAKING THE CHANGES
					|
					COPY CHANGE  --> IMPACT ANALYSIS -> 80 COMPONENT IMPACTED< NOT STARTED 
								|
								ESGTIMATES ->  800 HR -REVIEW

==> SORT JCL ->  SUM FIELDS=(1,5,PD)  -> SUMMERIZING
			|
			1. RMEOVE THE DUPLICATE + SUM

	C1111,1000
	C2222,2000
	C2222,3000	- SUM FILED=(AMT)  ->   C11111,1000
						C22222,5000

 ISSUE > AFTER THE SUMMEIRZE -> I SEE DUPLICATE IN OUTPUT FILE..






























